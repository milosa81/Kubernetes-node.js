---
# EXPORT SERVICE INTERFACE
kind: Service
apiVersion: v1
metadata:
  name: nodejs-service
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
  - port: 3000
    name: web
  clusterIP: None
  selector:
      app: nodejs
---
# CONFIGURATION FOR THE NODEJS APP
kind: ConfigMap
apiVersion: v1
metadata:
  name: nodejs-config
data:
  DEBUG: "kfd-nodejs:server,http,mail,express:*"
  ENV: "production"
  PORT: "3000"
  feature.flags: |
    {
      "name": "kfd-nodejs",
      "debug": true,
      "features": {
        "flag1": "abc",
        "flag2": "def"
      },
      "db": "redis-service"
    }
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nodejs
spec:
  serviceName: "nodejs-service"
  replicas: 3
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
         app: nodejs
    spec:
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
        - "/go/bin/agent-linux"
        - "--collector.host-port=jaeger-collector:14267"
      - name: nodejs
        image: quay.io/kubernetes-for-developers/nodejs:0.5.0
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: web
        envFrom:
        - configMapRef:
            name: nodejs-config
        volumeMounts:
            - name: config
              mountPath: /etc/nodejs-config
              readOnly: true
            - name: datastore
              mountPath: /opt/data
        livenessProbe:
          httpGet:
            path: /probes/alive
            port: 3000
          initialDelaySeconds: 1
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /probes/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: nodejs-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: datastore
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
